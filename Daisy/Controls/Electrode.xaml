<UserControl x:Class="Daisy.Petal.Electrode"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:Daisy.Converters"
             mc:Ignorable="d">

    <UserControl.Resources>
        <Color x:Key="DColor.ElectrodeBorder">#FF89761a</Color>
        <Color x:Key="DColor.Indicator">#FFc4c4c4</Color>

        <SolidColorBrush x:Key="DBrush.ElectrodeBorder" Color="{StaticResource DColor.ElectrodeBorder}"/>
        <SolidColorBrush x:Key="DBrush.Indicator" Color="{StaticResource DColor.Indicator}"/>

        <LinearGradientBrush x:Key="DBrush.Electrode.Before" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#ff998213" Offset="0.0"/>
            <GradientStop Color="#ffcbab09" Offset="0.25"/>
            <GradientStop Color="#ffffd600" Offset="1.0"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DBrush.Electrode.During" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#ff651108" Offset="0.0"/>
            <GradientStop Color="#ffa11a04" Offset="0.25"/>
            <GradientStop Color="#ffe02400" Offset="1.0"/>
        </LinearGradientBrush>
        
        <LinearGradientBrush x:Key="DBrush.Electrode.After.Light" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#ff9b7777" Offset="0.0"/>
            <GradientStop Color="#ffc69494" Offset="0.25"/>
            <GradientStop Color="#fff2b1b1" Offset="1.0"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DBrush.Electrode.After.Medium" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#ff833838" Offset="0.0"/>
            <GradientStop Color="#ffa73d3d" Offset="0.25"/>
            <GradientStop Color="#ffcd4343" Offset="1.0"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DBrush.Electrode.After.Heavy" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#ff701414" Offset="0.0"/>
            <GradientStop Color="#ff920a0a" Offset="0.25"/>
            <GradientStop Color="#ffb60000" Offset="1.0"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DBrush.Electrode.NotSelected" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#ff4e4e4e" Offset="0.0"/>
            <GradientStop Color="#ff5f5f5f" Offset="0.25"/>
            <GradientStop Color="#ff6c6c6c" Offset="1.0"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DBrush.Halo" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#ff939393" Offset="0.0"/>
            <GradientStop Color="#ffbcbcbc" Offset="0.35"/>
            <GradientStop Color="#ffe8e8e8" Offset="1.0"/>
        </LinearGradientBrush>

        <Geometry x:Key="DGeometry.Halo">m 34.634301,4.7720815 c 1.42573,3.661823 1.34898,8.5702585 -3.33357,20.8649605 -4.25218,11.16472 -6.35335,18.98569 -9.29428,22.45703 -0.64828,0.76518 -2.43422,1.99714 -4.25873,1.99714 -1.82451,0 -3.61045,-1.23196 -4.25873,-1.99714 C 10.548061,44.622732 8.4468907,36.801762 4.1947107,25.637042 -0.48783929,13.34234 -0.56458929,8.4339045 0.86114071,4.7720815 2.6947907,-0.13273747 12.896881,0.22082653 17.747721,0.22082653 c 4.85084,0 15.05293,-0.353564 16.88658,4.55125497z</Geometry>
        <Geometry x:Key="DGeometry.Electrode">m 15.998464,44.616495 c 2.315339,-3.158066 5.293319,-12.276423 8.53508,-21.428539 3.923559,-11.076949 3.938849,-14.7832718 2.816399,-18.1146329 -1.814249,-5.38461413 -9.48875,-4.84267513 -13.32946,-4.84267513 -3.840709,0 -11.5152097,-0.541939 -13.32945968,4.84267513 -1.1224501,3.3313611 -1.1071601,7.0376839 2.81639998,18.1146329 3.2417602,9.152116 6.2197402,18.270473 8.5350797,21.428539 0.510381,0.696135 1.3472,0.98397 1.97798,0.98397 0.63078,0 1.4676,-0.287835 1.977981,-0.98397z</Geometry>
        <Geometry x:Key="DGeometry.Posterior">m 272.52281,233.05596 c -3.507,0 -6.35,2.84299 -6.35,6.35 0,3.50701 2.843,6.35 6.35,6.35 3.507,0 6.35,-2.84299 6.35,-6.35 0,-3.50701 -2.843,-6.35 -6.35,-6.35 z m -2.80448,2.80035 h 2.61226 c 1.13331,0 1.98096,0.1977 2.54349,0.59376 0.56668,0.39606 0.85008,0.97989 0.85008,1.7508 0,0.8098 -0.31025,1.42996 -0.9307,1.86138 -0.62042,0.43143 -1.50318,0.64751 -2.64893,0.64751 h -0.94308 v 2.90111 h -1.48312 z m 1.48312,1.14744 v 2.57464 h 0.78806 c 0.76108,0 1.31911,-0.0479 1.67484,-0.27423 0.35571,-0.22632 0.66437,-0.57999 0.66437,-1.06092 0,-0.44557 -0.29006,-0.77811 -0.60857,-0.99735 -0.31848,-0.21925 -0.8146,-0.24214 -1.48878,-0.24214 z</Geometry>
        <Geometry x:Key="DGeometry.MultipleActivations">m 359.06235,172.04663 c -3.507,0 -6.35,2.84299 -6.35,6.35 0,3.50701 2.843,6.35 6.35,6.35 3.507,0 6.35,-2.84299 6.35,-6.35 0,-3.50701 -2.843,-6.35 -6.35,-6.35 z m -0.96477,3.24838 h 1.92958 v 2.13682 h 2.13736 v 1.9296 h -2.13736 v 2.13734 h -1.92958 v -2.13734 h -2.13683 v -1.9296 h 2.13683 z</Geometry>
        <Geometry x:Key="DGeometry.Triangle">M250.60763847 154.589778356C250.60763847 154.589778356 238.425614912 154.597364636 238.425614912 154.597364636C238.425614912 154.597364636 244.510053352 144.043623647 244.510053352 144.043623647C244.510053352 144.043623647 250.60763847 154.589778356 250.60763847 154.589778356</Geometry>
    </UserControl.Resources>

    <Grid Height="{Binding Height}" RenderTransformOrigin="0.5,1">
        <Grid.RenderTransform>
            <RotateTransform Angle="{Binding Angle}"/>
        </Grid.RenderTransform>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Border 
            x:Name="RectangleIndicatorBorder"
            Grid.Row="0" 
            Margin="0,0,0,10"
            Width="{Binding ActualWidth, ElementName=ElectrodeBorder, Converter={converters:PercentageConverter}, ConverterParameter=0.1}" 
            Height="{Binding ActualWidth, RelativeSource={RelativeSource Self}, Converter={converters:PercentageConverter}, ConverterParameter=0.25}"
            Background="{StaticResource DBrush.Indicator}"
            Visibility="{Binding OrientationMarker, Converter={converters:EnumToVisibilityConverter}, ConverterParameter='Rectangle'}"/>
        <Border 
            x:Name="TriangleIndicatorBorder" 
            Grid.Row="0"
            Margin="0,0,0,10"
            Width="{Binding ActualWidth, ElementName=ElectrodeBorder, Converter={converters:PercentageConverter}, ConverterParameter=0.2}" 
            Height="{Binding ActualWidth, ElementName=ElectrodeBorder, Converter={converters:PercentageConverter}, ConverterParameter=0.2}" 
            Visibility="{Binding OrientationMarker, Converter={converters:EnumToVisibilityConverter}, ConverterParameter='SolidTriangle;OutlineTriangle'}">
            <Path
                x:Name="TrianglePath"
                Data="{StaticResource DGeometry.Triangle}"
                Stretch="Uniform"
                Stroke="{StaticResource DBrush.Indicator}">
                <Path.Style>
                    <Style TargetType="{x:Type Path}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding OrientationMarker}" Value="SolidTriangle">
                                <Setter Property="Fill" Value="{StaticResource DBrush.Indicator}"/>
                                <Setter Property="StrokeThickness" Value="0"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding OrientationMarker}" Value="OutlineTriangle">
                                <Setter Property="Fill" Value="Transparent"/>
                                <Setter Property="StrokeThickness" Value="2"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Path.Style>
            </Path>
        </Border>
        <Border x:Name="HaloBorder" Grid.Row="1" Grid.RowSpan="3">
            <Path
                x:Name="HaloPath"
                Data="{StaticResource DGeometry.Halo}"
                Stretch="Uniform"
                Fill="{StaticResource DBrush.Halo}"
                Visibility="{Binding MeetsAlignmentCriteria, Converter={converters:BoolToVisibilityConverter}, ConverterParameter='Hidden'}"/>
        </Border>
        <Border x:Name="ElectrodeBorder" 
            Grid.Row="1"
            Grid.RowSpan="3"
            VerticalAlignment="Top"
            Height="{Binding Path=ActualHeight, ElementName=HaloBorder, Converter={converters:PercentageConverter}, ConverterParameter=0.94}">
            <Path
                x:Name="ElectrodePath"
                Data="{StaticResource DGeometry.Electrode}"
                Stretch="Uniform"
                Stroke="{StaticResource DBrush.ElectrodeBorder}">
                <Path.Style>
                    <Style TargetType="{x:Type Path}">
                        <Setter Property="StrokeThickness" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MeetsAlignmentCriteria}" Value="True">
                                <Setter Property="StrokeThickness" Value="2"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding AblationState}" Value="Before">
                                <Setter Property="Fill" Value="{StaticResource DBrush.Electrode.Before}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding AblationState}" Value="During">
                                <Setter Property="Fill" Value="{StaticResource DBrush.Electrode.During}"/>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding AblationState}" Value="After"/>
                                    <Condition Binding="{Binding AblationResult}" Value="Light"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" Value="{StaticResource DBrush.Electrode.After.Light}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding AblationState}" Value="After"/>
                                    <Condition Binding="{Binding AblationResult}" Value="Medium"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" Value="{StaticResource DBrush.Electrode.After.Medium}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding AblationState}" Value="After"/>
                                    <Condition Binding="{Binding AblationResult}" Value="Heavy"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" Value="{StaticResource DBrush.Electrode.After.Heavy}"/>
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding IsSelected}" Value="False">
                                <Setter Property="Fill" Value="{StaticResource DBrush.Electrode.NotSelected}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Path.Style>
            </Path>
        </Border>
        <TextBlock 
            x:Name="Number" 
            Grid.Row="1"
            Text="{Binding Number}" 
            FontSize="{Binding NumberFontSize}" 
            FontFamily="{StaticResource DFontFamily.Regular}" 
            FontWeight="SemiBold"
            HorizontalAlignment="Center">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground" Value="White"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding AblationState}" Value="Before">
                            <Setter Property="Foreground" Value="Black"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <Border x:Name="PosteriorBorder" Grid.Row="2" Height="{Binding IndicatorHeight}">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding AblationState}" Value="After"/>
                                <Condition Binding="{Binding IsPosterior}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Path
                x:Name="PosteriorPath"
                Data="{StaticResource DGeometry.Posterior}"
                Stretch="Uniform"
                Fill="Black"/>
        </Border>
        <Border 
            x:Name="MultipleActivationsBorder" 
            Grid.Row="3" 
            Height="{Binding IndicatorHeight}" 
            VerticalAlignment="Top" 
            Margin="0,2,0,0">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding AblationState}" Value="After"/>
                                <Condition Binding="{Binding IsPosterior}" Value="True"/>
                                <Condition Binding="{Binding NumberOfActivations}" Value="2"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Path
                x:Name="MultipleActivationsPath"
                Data="{StaticResource DGeometry.MultipleActivations}"
                Stretch="Uniform"
                Fill="Black"/>
        </Border>
    </Grid>
</UserControl>
