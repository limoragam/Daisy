<UserControl x:Class="daisy.Controls.Electrode"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:daisy.Converters"
             x:Name="_this"
             mc:Ignorable="d">

    <UserControl.Resources>
        <Color x:Key="DColor.ElectrodeBorder">#FF89761a</Color>
        <Color x:Key="DColor.FluoroMarker">#FFc4c4c4</Color>
        <Color x:Key="DColor.Foreground">#ff111111</Color>

        <SolidColorBrush x:Key="DBrush.ElectrodeBorder" Color="{StaticResource DColor.ElectrodeBorder}"/>
        <SolidColorBrush x:Key="DBrush.FluoroMarker" Color="{StaticResource DColor.FluoroMarker}"/>
        <SolidColorBrush x:Key="DBrush.Foreground" Color="{StaticResource DColor.Foreground}"/>

        <LinearGradientBrush x:Key="DBrush.Halo" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#ffa0a0a0" Offset="0.0"/>
            <GradientStop Color="#ffe0e0e0" Offset="0.35"/>
            <GradientStop Color="White" Offset="1.0"/>
        </LinearGradientBrush>

        <Geometry x:Key="DGeometry.Halo">m 34.634301,4.7720815 c 1.42573,3.661823 1.34898,8.5702585 -3.33357,20.8649605 -4.25218,11.16472 -6.35335,18.98569 -9.29428,22.45703 -0.64828,0.76518 -2.43422,1.99714 -4.25873,1.99714 -1.82451,0 -3.61045,-1.23196 -4.25873,-1.99714 C 10.548061,44.622732 8.4468907,36.801762 4.1947107,25.637042 -0.48783929,13.34234 -0.56458929,8.4339045 0.86114071,4.7720815 2.6947907,-0.13273747 12.896881,0.22082653 17.747721,0.22082653 c 4.85084,0 15.05293,-0.353564 16.88658,4.55125497z</Geometry>
        <Geometry x:Key="DGeometry.Electrode">m 15.998464,44.616495 c 2.315339,-3.158066 5.293319,-12.276423 8.53508,-21.428539 3.923559,-11.076949 3.938849,-14.7832718 2.816399,-18.1146329 -1.814249,-5.38461413 -9.48875,-4.84267513 -13.32946,-4.84267513 -3.840709,0 -11.5152097,-0.541939 -13.32945968,4.84267513 -1.1224501,3.3313611 -1.1071601,7.0376839 2.81639998,18.1146329 3.2417602,9.152116 6.2197402,18.270473 8.5350797,21.428539 0.510381,0.696135 1.3472,0.98397 1.97798,0.98397 0.63078,0 1.4676,-0.287835 1.977981,-0.98397z</Geometry>
        <Geometry x:Key="DGeometry.Posterior">m 1.8030324,279.7315 v 2.20471 h 0.3535579 c 0.8590381,0.0372 1.6083173,-0.34864 1.6226143,-1.14718 -0.076559,-0.89758 -0.7888843,-1.05783 -1.4548508,-1.05753 H 1.8030324 M 0,278.34166 h 2.4227749 c 1.5928965,-0.0254 2.8811467,0.941 2.8988178,2.39987 -0.074751,1.88419 -1.8385053,2.55885 -3.0892578,2.56808 H 1.8030323 v 2.44038 H 0 Z</Geometry>
        <Geometry x:Key="DGeometry.MultipleActivations">m 2.13683,279.54623 h 1.92958 v 2.13682 h 2.13736 v 1.9296 H 4.06641 v 2.13734 H 2.13683 v -2.13734 H 0 v -1.9296 h 2.13683 z</Geometry>
        <Geometry x:Key="DGeometry.Triangle">M250.60763847 154.589778356C250.60763847 154.589778356 238.425614912 154.597364636 238.425614912 154.597364636C238.425614912 154.597364636 244.510053352 144.043623647 244.510053352 144.043623647C244.510053352 144.043623647 250.60763847 154.589778356 250.60763847 154.589778356z</Geometry>

        <ControlTemplate x:Key="DControlTemplate.Canvas.Disconnected">
            <Viewbox Stretch="Uniform">
                <Canvas HorizontalAlignment="Center" Width="33.797" Height="44">
                    <Path Fill="#ffffffff" Data="M 2.5511678,0.79236444 C 0.05274285,12.264545 0.62191463,21.908707 3.1034697,28.570302 5.1528042,34.071622 10.565822,41.23982 16.901065,42.78098 23.236308,41.23982 28.64435,34.071622 30.693684,28.570302 33.175241,21.908709 33.744411,12.264545 31.245985,0.79236444 Z"/>
                    <Path Fill="#ffff0000" Data="m 23.614537,7.5753662 -6.689622,6.6896218 -6.689622,-6.6896218 -2.8978432,2.8978428 6.6896212,6.689623 -6.6858959,6.685896 2.8941179,2.894116 6.685896,-6.685895 6.689621,6.68962 2.897844,-2.897842 -6.689621,-6.689621 6.689621,-6.689622 z M 1.7095419,0 C -0.93544177,12.021734 -0.33288209,22.127882 2.2942421,29.108587 4.4637916,34.873436 10.19434,42.385013 16.90121,44.000003 23.608082,42.385013 29.333362,34.873436 31.502912,29.108587 34.130036,22.127882 34.732597,12.021734 32.087612,0 Z M 3.472072,1.8520787 H 30.325084 C 32.499121,12.770209 31.978414,21.904257 29.60132,28.328985 27.638255,33.6347 22.96883,40.334264 16.90121,41.820632 10.833593,40.334264 6.1588992,33.6347 4.1958346,28.328985 1.8187405,21.904257 1.2980347,12.770209 3.472072,1.8520787 Z"/>
                </Canvas>
            </Viewbox>
        </ControlTemplate>

        <Style x:Key="DStyle.TextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="{StaticResource DFontFamily.Regular}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="DStyle.Border.Indicator" TargetType="{x:Type Border}">
            <Setter Property="Height" Value="{Binding Path=ActualWidth, ElementName=ElectrodeBorder, Converter={converters:PercentageConverter}, ConverterParameter=0.35}"/>
            <Setter Property="Width" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"/>
            <Setter Property="CornerRadius" Value="300"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource DBrush.Foreground}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        </Style>
    </UserControl.Resources>

    <Grid x:Name="ElectrodeMainGrid" Width="{Binding Path=Width, ElementName=_this}" RenderTransformOrigin="0.5,0.5">
        <Grid.RenderTransform>
            <RotateTransform Angle="{Binding Angle, ElementName=_this}"/>
        </Grid.RenderTransform>
        <Grid.RowDefinitions>
            <RowDefinition x:Name="IndicatorRow" Height="{Binding RimThickness, ElementName=_this}"/>
            <RowDefinition x:Name="NumberRow" Height="Auto"/>
            <RowDefinition x:Name="PosteriorRow" Height="Auto"/>
            <RowDefinition x:Name="MultipleActivationsRow"/>
        </Grid.RowDefinitions>
        <Border x:Name="RectangleIndicatorBorder"
            Grid.Row="0"
            Margin="0,0,0,6"
            VerticalAlignment="Center"
            Width="{Binding ActualWidth, ElementName=ElectrodeBorder, Converter={converters:PercentageConverter}, ConverterParameter=0.3}" 
            Height="{Binding ActualWidth, RelativeSource={RelativeSource Self}, Converter={converters:PercentageConverter}, ConverterParameter=0.3}"
            Background="{StaticResource DBrush.FluoroMarker}"
            Visibility="{Binding FluoroMarker, Converter={converters:EnumToVisibilityConverter}, ConverterParameter='Rectangle'}"/>
        <Border x:Name="TriangleIndicatorBorder" 
            Grid.Row="0"
            VerticalAlignment="Top"
            HorizontalAlignment="Center"
            Width="{Binding ActualWidth, ElementName=ElectrodeBorder, Converter={converters:PercentageConverter}, ConverterParameter=0.25}" 
            Height="{Binding ActualWidth, ElementName=ElectrodeBorder, Converter={converters:PercentageConverter}, ConverterParameter=0.25}" 
            Visibility="{Binding FluoroMarker, Converter={converters:EnumToVisibilityConverter}, ConverterParameter='#SolidTriangle;OutlineTriangle'}">
            <Path
                x:Name="TrianglePath"
                Data="{StaticResource DGeometry.Triangle}"
                Stretch="Uniform"
                Stroke="{StaticResource DBrush.FluoroMarker}"
                StrokeLineJoin="Round">
                <Path.Style>
                    <Style TargetType="{x:Type Path}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding FluoroMarker}" Value="SolidTriangle">
                                <Setter Property="Fill" Value="{StaticResource DBrush.FluoroMarker}"/>
                                <Setter Property="StrokeThickness" Value="0"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding FluoroMarker}" Value="OutlineTriangle">
                                <Setter Property="Fill" Value="Transparent"/>
                                <Setter Property="StrokeThickness" Value="2"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Path.Style>
            </Path>
        </Border>
        <Border x:Name="HaloBorder" Grid.Row="1" Grid.RowSpan="3">
            <Path
                x:Name="HaloPath"
                Data="{StaticResource DGeometry.Halo}"
                Stretch="UniformToFill"
                Fill="{StaticResource DBrush.Halo}">
                <Path.Style>
                    <Style TargetType="{x:Type Path}">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MeetsAlignmentCriteria}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Path.Style>
            </Path>
        </Border>
        <Border x:Name="ElectrodeBorder" 
            Grid.Row="1"
            Grid.RowSpan="3"
            VerticalAlignment="Top"
            Height="{Binding Path=ActualHeight, ElementName=HaloBorder, Converter={converters:PercentageConverter}, ConverterParameter=0.94}">
            <Path
                x:Name="ElectrodePath"
                Data="{StaticResource DGeometry.Electrode}"
                Stretch="Uniform"
                Stroke="{StaticResource DBrush.ElectrodeBorder}">
                <Path.Style>
                    <Style TargetType="{x:Type Path}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MeetsAlignmentCriteria}" Value="True">
                                <Setter Property="StrokeThickness" Value="2"/>
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="StrokeThickness" Value="0"/>
                        <Setter Property="Fill">
                            <Setter.Value>
                                <MultiBinding Converter="{converters:IntensityToGradientBrushConverter}">
                                    <Binding Path="Intensity"/>
                                    <Binding Path="ColorLow"/>
                                    <Binding Path="ColorHigh"/>
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Path.Style>
            </Path>
        </Border>
        <TextBlock x:Name="Number" 
            Grid.Row="1"
            Margin="0,6,0,0"
            Text="{Binding Number}" 
            FontSize="{Binding Path=ActualHeight, ElementName=HaloBorder, Converter={converters:PercentageConverter}, ConverterParameter=0.2}" 
            RenderTransformOrigin="0.5,0.5">
            <TextBlock.RenderTransform>
                <RotateTransform Angle="{Binding Angle, ElementName=_this, Converter={converters:PercentageConverter}, ConverterParameter=-1.0}"/>
            </TextBlock.RenderTransform>
            <TextBlock.Style>
                <Style BasedOn="{StaticResource DStyle.TextBlock}" TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground" Value="White"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding TextDark}" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource DBrush.Foreground}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        
        <Border x:Name="PosteriorBorder" Grid.Row="2" Margin="0,3" Padding="3">
            <Border.RenderTransform>
                <RotateTransform Angle="{Binding Angle, ElementName=_this, Converter={converters:PercentageConverter}, ConverterParameter=-1.0}"/>
            </Border.RenderTransform>
            <Border.Style>
                <Style BasedOn="{StaticResource DStyle.Border.Indicator}" TargetType="{x:Type Border}">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPosterior}" Value="True"/>
                                <Condition Binding="{Binding Status, Converter={converters:EnumToBoolConverter}, ConverterParameter='!Disconnected'}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Path
                x:Name="PosteriorPath"
                Data="{StaticResource DGeometry.Posterior}"
                Stretch="Uniform"
                Fill="{StaticResource DBrush.Foreground}"/>
        </Border>

        <ContentControl
            Grid.Row="2"
            Margin="0,10,0,-10"
            Height="{Binding Path=ActualHeight, ElementName=ElectrodeMainGrid, Converter={converters:PercentageConverter}, ConverterParameter=.2}"
            HorizontalAlignment="Center"
            Template="{StaticResource DControlTemplate.Canvas.Disconnected}"
            Visibility="{Binding Status, Converter={converters:EnumToVisibilityConverter}, ConverterParameter='Disconnected'}"/>

        <Border x:Name="MultipleActivationsBorder" 
            Grid.Row="3" 
            VerticalAlignment="Top" 
            Margin="0,14,0,-2"
            Padding="3.5">
            <Border.RenderTransform>
                <RotateTransform Angle="{Binding Angle, ElementName=_this, Converter={converters:PercentageConverter}, ConverterParameter=-1.0}"/>
            </Border.RenderTransform>
            <Border.Style>
                <Style BasedOn="{StaticResource DStyle.Border.Indicator}" TargetType="{x:Type Border}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding NumberOfActivations, Converter={converters:GreaterThanConverter}, ConverterParameter=1}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Path
                x:Name="MultipleActivationsPath"
                Data="{StaticResource DGeometry.MultipleActivations}"
                Stretch="Uniform"
                Fill="{StaticResource DBrush.Foreground}"/>
        </Border>
    </Grid>
</UserControl>
